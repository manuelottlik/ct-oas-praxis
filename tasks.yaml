openapi: "3.0.0"
info:
  version: 1.0.0
  title: c't Task API
  license:
    name: MIT
servers:
 - url: "http://localhost/tasks/" 
paths:
  /tasks:
    get:
      summary: Get all tasks
      operationId: getTasks
      tags:
        - tasks
      responses:
        '200':
          description: An array of tasks
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Tasks"
    post:
      summary: Create a task
      operationId: createTask
      tags:
        - tasks
      responses:
        '201':
          description: Null response
  /tasks/{taskId}:
    get:
      summary: Info for a specific Task
      operationId: getTaskById
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: The id of the Task to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    put:
      summary: update a specific task
      operationId: updateTask
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: id of the task to update
          schema:
            type: string
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    delete:
      summary: delete a task
      operationId: deleteTask
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: id of the task to delete
          schema:
            type: string
      responses:
        '204':
          description: expected response to a valid request

  
components:
  schemas:
    Task:
      type: object
      required:
        - name
        - bookable
        - floor_id
        - category_id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 2
          maxLength: 255
        bookable:
          type: boolean
        floor_id:
          type: integer
        category_id:
          type: integer
    Tasks:
      type: array
      items:
        $ref: "#/components/schemas/Task"
    Error:
      type: object
      required:
        - error
        - code
      properties:
        code:
          type: integer
          format: int32
        error:
          type: string